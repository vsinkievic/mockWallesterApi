/**
 * Represents a Company.
 */
entity Company {
  id UUID, // Changed to UUID
  name String,
  registrationNumber String,
  // Flattened Registration Address
  regAddressCountryCode CountryCode,
  regAddress1 String,
  regAddress2 String,
  regAddressCity String,
  regAddressPostalCode String,
  // Flattened Headquarter Address
  hqAddressCountryCode CountryCode,
  hqAddress1 String,
  hqAddress2 String,
  hqAddressCity String,
  hqAddressPostalCode String,
  riskProfile RiskProfile,
  mobile String,
  email String,
  createdAt Instant,
  createdBy String,
  updatedAt Instant,
  updatedBy String,
  deletedAt Instant,
  deletedBy String,
  industryType String,
  dateOfIncorporation Instant,
  businessRelationshipPurpose String,
  isSanctionsRelated Boolean,
  isAdverseMediaInvolved Boolean,
  employeesQuantity String,
  cardSpendingAmount String,
  // Simplified Limits (Example subset)
  limitDailyPurchase BigDecimal,
  limitDailyWithdrawal BigDecimal,
  limitMonthlyPurchase BigDecimal,
  limitMonthlyWithdrawal BigDecimal,
  kybStatus KybStatus,
  status AccountStatus, // Reusing AccountStatus for Company status as per original model
  pushNotificationsEnabled Boolean,
  preferredLanguageCode LanguageCode, // Assuming LanguageCode enum exists or needs definition
  vatNumber String
}

/**
 * Represents a customer Account.
 */
entity CardAccount {
  id UUID required
  accountNumber String required
  currency CurrencyCode required
  balance BigDecimal required
  reservedAmount BigDecimal required
  availableAmount BigDecimal required
  blockedAmount BigDecimal required
  status AccountStatus required
  createdAt Instant required
  updatedAt Instant required
}

/**
 * Represents a single record in an Account Statement.
 */
entity AccountStatementRecord {
  id UUID, // Changed to UUID
  cardId UUID, // Link to Card ID
  type AccountStatementRecordType, // Updated Enum
  group AccountStatementRecordGroup, // Updated Enum
  date Instant,
  transactionAmount BigDecimal,
  transactionCurrencyCode CurrencyCode,
  accountAmount BigDecimal,
  accountCurrencyCode CurrencyCode,
  merchantCategoryCode MerchantCategoryCode, // Updated Enum
  merchantId String,
  terminalId String,
  merchantName String,
  merchantCity String,
  merchantCountryCode CountryCode, // Updated Enum
  description String,
  originalAuthorizationId String,
  isReversal Boolean,
  isDeclined Boolean,
  isCleared Boolean,
  markedForDisputeAt Instant,
  markedForDisputeBy String,
  status AccountStatementRecordStatus, // Updated Enum
  response AccountStatementRecordResponse, // Updated Enum
  responseCode String,
  accountExternalId String,
  maskedCardNumber String,
  hasPaymentDocumentFiles Boolean,
  hasPaymentNotes Boolean,
  cardName String,
  embossingName String,
  embossingFirstName String,
  embossingLastName String,
  embossingCompanyName String,
  subType String,
  purchaseDate Instant,
  exchangeRate BigDecimal,
  // Flattened Enriched Merchant Data
  enrichedMerchantName String,
  enrichedMerchantUrl String,
  enrichedMerchantDomain String,
  enrichedMerchantTelephone String,
  enrichedMerchantIconUrl String,
  totalAmount BigDecimal
}

/**
 * Represents a Card.
 */
entity Card {
  id UUID, // Changed to UUID
  predecessorCardId UUID, // Link to previous Card ID
  accountId UUID, // Link to Account ID
  personId String, // Assuming Person entity might exist elsewhere
  externalId String,
  type CardType, // Updated Enum
  name String,
  maskedCardNumber String,
  referenceNumber String,
  expiryDate Instant,
  blockType BlockType, // Updated Enum
  blockedAt Instant,
  blockedBy String,
  status CardStatus, // Updated Enum
  embossingName String,
  embossingFirstName String,
  embossingLastName String,
  embossingCompanyName String,
  // Simplified Limits (Example subset)
  limitDailyPurchase BigDecimal,
  limitDailyWithdrawal BigDecimal,
  limitMonthlyPurchase BigDecimal,
  limitMonthlyWithdrawal BigDecimal,
  limitTransactionPurchase BigDecimal,
  // Simplified 3D Secure Settings
  secure3DType Secure3DType, // Assuming Secure3DType enum exists or needs definition
  secure3DMobile String,
  secure3DEmail String,
  secure3DLanguageCode LanguageCode, // Assuming LanguageCode enum exists or needs definition
  secure3DOutOfBandEnabled Boolean,
  secure3DOutOfBandId String,
  // Flattened Delivery Address
  deliveryFirstName String,
  deliveryLastName String,
  deliveryCompanyName String,
  deliveryAddress1 String,
  deliveryAddress2 String,
  deliveryPostalCode String,
  deliveryCity String,
  deliveryCountryCode CountryCode, // Updated Enum
  deliveryDispatchMethod DispatchMethod, // Assuming DispatchMethod enum exists or needs definition
  deliveryPhone String,
  deliveryTrackingNumber String,
  isEnrolledFor3DSecure Boolean,
  isCard3DSecureActivated Boolean,
  renewAutomatically Boolean,
  isDisposable Boolean,
  // Flattened Security Settings
  securityContactlessEnabled Boolean,
  securityWithdrawalEnabled Boolean,
  securityInternetPurchaseEnabled Boolean,
  securityOverallLimitsEnabled Boolean,
  securityAllTimeLimitsEnabled Boolean,
  personalizationProductCode String,
  carrierType CarrierType, // Assuming CarrierType enum exists or needs definition
  cardMetadataProfileId String,
  activatedAt Instant,
  createdAt Instant,
  updatedAt Instant,
  closedAt Instant,
  closedBy String,
  closeReason CardCloseReason, // Updated Enum
  companyId UUID, // Optional link to Company ID
  dispatchedAt Instant,
  // Card Notification Settings
  notificationReceiptsReminderEnabled Boolean,
  notificationInstantSpendUpdateEnabled Boolean,
  disposableType DisposableType // Assuming DisposableType enum exists or needs definition
}

// --- Enums ---

// Updated with provided values
enum BlockType {
  BlockedByCardUser, BlockedByCardholder, BlockedByCardholderViaPhone, BlockedByClient, BlockedByIssuer, Counterfeit, Fraudulent, Frozen, Lost, MaxInvalidTriesCVV2, MaxInvalidTriesPIN, NotDelivered, Stolen
}

// New Enum based on provided values
enum CardStatus {
  Active, AwaitingRenewal, Blocked, Closed, Closing, Created, Dispatched, Expired, Ordered, Personalized
}

// New Enum based on provided values
enum CardCloseReason {
  ClosedByCardholder, ClosedByClient, ClosedByIssuer, ClosedByRenewal, ClosedByReplace, ClosedBySystem
}

// Updated with provided values
enum CardType {
  ChipAndPin, ChipAndPinAnonymous, Virtual
}

// Updated with provided values
enum CurrencyCode {
  AED, AFN, ALL, AMD, ANG, AOA, ARS, AUD, AWG, AZN, BAM, BBD, BDT, BGN, BHD, BIF, BMD, BND, BOB, BOV, BRL, BSD, BTN, BWP, BYN, BZD, CAD, CDF, CHE, CHF, CHW, CLF, CLP, CNY, COP, COU, CRC, CUC, CUP, CVE, CZK, DJF, DKK, DOP, DZD, EGP, ERN, ETB, EUR, FJD, FKP, GBP, GEL, GHS, GIP, GMD, GNF, GTQ, GYD, HKD, HNL, HRK, HTG, HUF, IDR, ILS, INR, IQD, IRR, ISK, JMD, JOD, JPY, KES, KGS, KHR, KMF, KPW, KRW, KWD, KYD, KZT, LAK, LBP, LKR, LRD, LSL, LYD, MAD, MDL, MGA, MKD, MMK, MNT, MOP, MRU, MUR, MVR, MWK, MXN, MXV, MYR, MZN, NAD, NGN, NIO, NOK, NPR, NZD, OMR, PAB, PEN, PGK, PHP, PKR, PLN, PYG, QAR, RON, RSD, RUB, RWF, SAR, SBD, SCR, SDG, SEK, SGD, SHP, SLL, SOS, SRD, SSP, STN, SVC, SYP, SZL, THB, TJS, TMT, TND, TOP, TRY, TTD, TWD, TZA, UAH, UGX, USD, USN, UYI, UYU, UYW, UZS, VES, VND, VUV, WST, XAF, XCD, XOF, XPF, YER, ZAR, ZMW, ZWL
}

// Updated with provided values
enum AccountStatus {
  Active, Blocked, Closed, Closing
}

// New Enum based on provided values
enum AccountCloseReason {
  ClosedByCardholder, ClosedByClient, ClosedByIssuer, ClosedBySystem
}

// New Enum based on provided values
enum AccountStatementRecordType {
  AccountAdjustment, Authorization, Fee, Transaction
}

// New Enum based on provided values
enum AccountStatementRecordGroup {
  AccountClosureFee, AccountTransferFee, AdditionalBINConfigurationFee, AdditionalBINMaintenanceFee, AdditionalVirtualCardsFee, AuthorizationATMBalanceInquiryFixedFee, AuthorizationATMDeclinedFixedFee, AuthorizationATMWithdrawalComplexFee, AuthorizationATMWithdrawalEEAComplexFee, AuthorizationATMWithdrawalFixedFee, AuthorizationATMWithdrawalInternationalComplexFee, AuthorizationATMWithdrawalPercentageFee, AuthorizationDeclinedFixedFee, AuthorizationEEAFixedFee, AuthorizationForeignExchangePercentageFee, AuthorizationInternationalFixedFee, AvailableFundsRefundFee, Card3DSecureAttemptFixedFee, CardDeliveryFixedFee, CardExpressDeliveryFixedFee, CardIssuanceFixedFee, CardRenewalFixedFee, CardReplacementFixedFee, CardTopUpPercentageFee, CardUsageFixedFee, ChargebackProcessingFee, CurrencyExchangeFee, DedicatedBINRangeFee, Deposit, DisposableCardCreationFee, ExclusiveBINFee, ExclusiveSharedBINFee, IncomingSEPAPaymentFixedFee, IncomingSEPAPaymentPercentageFee, IndustryFee, InternetPurchase, MerchantWhitelistFee, MonthlyFeePerEmployee, MonthlyServiceFee, NewEmployeeAdditionFee, Other, OtherAdministrativeRequestFee, PINChangeFixedFee, PINManagement, PaymentEEAComplexFee, PaymentEEAFixedFee, PaymentInternationalComplexFee, PaymentInternationalFixedFee, PaymentPercentageFee, PricingPlanFee, Purchase, Refund, Remind3DSPasswordFixedFee, RemindPINFixedFee, SharedBINRangeFee, StablecoinTopUpPercentageFee, WireTransferDomesticFixedFee, WireTransferInternationalFixedFee, Withdraw, ZeroAuthorizationEEAFixedFee, ZeroAuthorizationInternationalFixedFee
}

// Updated with provided values - prefixed numeric codes with '_'
enum MerchantCategoryCode {
  MCC0742, MCC0763, MCC0780, MCC1520, MCC1711, MCC1731, MCC1740, MCC1750, MCC1761, MCC1771, MCC1799, MCC2842, MCC4011, MCC4111, MCC4112, MCC4119, MCC4121, MCC4131, MCC4214, MCC4215, MCC4225, MCC4411, MCC4457, MCC4468, MCC4511, MCC4582, MCC4722, MCC4784, MCC4789, MCC4812, MCC4814, MCC4816, MCC4821, MCC4829, MCC4899, MCC4900, MCC5013, MCC5137, MCC5139, MCC5200, MCC5211, MCC5231, MCC5251, MCC5261, MCC5271, MCC5300, MCC5309, MCC5310, MCC5311, MCC5331, MCC5411, MCC5422, MCC5441, MCC5451, MCC5462, MCC5499, MCC5511, MCC5521, MCC5532, MCC5533, MCC5541, MCC5542, MCC5561, MCC5571, MCC5592, MCC5598, MCC5599, MCC5611, MCC5621, MCC5631, MCC5641, MCC5651, MCC5655, MCC5661, MCC5681, MCC5691, MCC5697, MCC5699, MCC5712, MCC5713, MCC5714, MCC5718, MCC5719, MCC5722, MCC5732, MCC5733, MCC5735, MCC5811, MCC5812, MCC5813, MCC5814, MCC5912, MCC5931, MCC5932, MCC5933, MCC5937, MCC5940, MCC5941, MCC5942, MCC5943, MCC5945, MCC5946, MCC5947, MCC5948, MCC5949, MCC5950, MCC5962, MCC5967, MCC5970, MCC5971, MCC5972, MCC5973, MCC5975, MCC5976, MCC5977, MCC5978, MCC5983, MCC5992, MCC5993, MCC5994, MCC5995, MCC5996, MCC5997, MCC5998, MCC5999, MCC6010, MCC6011, MCC6051, MCC6300, MCC7011, MCC7012, MCC7032, MCC7033, MCC7210, MCC7211, MCC7216, MCC7217, MCC7221, MCC7230, MCC7251, MCC7261, MCC7273, MCC7276, MCC7277, MCC7278, MCC7296, MCC7297, MCC7298, MCC7299, MCC7311, MCC7321, MCC7322, MCC7333, MCC7338, MCC7339, MCC7342, MCC7349, MCC7361, MCC7372, MCC7375, MCC7379, MCC7392, MCC7393, MCC7394, MCC7395, MCC7399, MCC7512, MCC7513, MCC7519, MCC7523, MCC7531, MCC7538, MCC7829, MCC7832, MCC7841, MCC7911, MCC7922, MCC7929, MCC7932, MCC7933, MCC7941, MCC7991, MCC7992, MCC7993, MCC7994, MCC7995, MCC7996, MCC7997, MCC7998, MCC7999, MCC8011, MCC8021, MCC8031, MCC8041, MCC8042, MCC8043, MCC8049, MCC8050, MCC8062, MCC8071, MCC8099, MCC8111, MCC8351, MCC8911, MCC8931, MCC8999, MCC9223, MCC9402
}

// Updated with provided ISO 3166-1 Alpha-3 codes
enum CountryCode {
  ABW, AFG, AGO, AIA, ALA, ALB, AND, ANT, ARE, ARG, ARM, ASM, ATA, ATF, ATG, AUS, AUT, AZE, BDI, BEL, BEN, BES, BFA, BGD, BGR, BHR, BHS, BIH, BLM, BLR, BLZ, BMU, BOL, BRA, BRB, BRN, BTN, BVT, BWA, CAF, CAN, CCK, CHE, CHL, CHN, CIV, CMR, COD, COG, COK, COL, COM, CPV, CRI, CUB, CUW, CXR, CYM, CYP, CZE, DEU, DJI, DMA, DNK, DOM, DZA, ECU, EGY, ERI, ESH, ESP, EST, ETH, FIN, FJI, FLK, FRA, FRO, FSM, GAB, GBR, GEO, GGY, GHA, GIB, GIN, GLP, GMB, GNB, GNQ, GRC, GRD, GRL, GTM, GUF, GUM, GUY, HKG, HMD, HND, HRV, HTI, HUN, IDN, IMN, IND, IOT, IRL, IRN, IRQ, ISL, ISR, ITA, JAM, JEY, JOR, JPN, KAZ, KEN, KGZ, KHM, KIR, KNA, KOR, KWT, LAO, LBN, LBR, LBY, LCA, LIE, LKA, LSO, LTU, LUX, LVA, MAC, MAF, MAR, MCO, MDA, MDG, MDV, MEX, MHL, MKD, MLI, MLT, MMR, MNE, MNG, MNP, MOZ, MRT, MSR, MTQ, MUS, MWI, MYS, MYT, NAM, NCL, NER, NFK, NGA, NIC, NIU, NLD, NOR, NPL, NRU, NZL, OMR, PAK, PAN, PCN, PER, PHL, PLW, PNG, POL, PRI, PRK, PRT, PRY, PSE, PYF, QAT, REU, ROU, RUS, RWA, SAU, SDN, SEN, SGP, SGS, SHN, SJM, SLB, SLE, SLV, SMR, SOM, SPM, SRB, SSD, STP, SUR, SVK, SVN, SWE, SWZ, SXM, SYC, SYR, TCA, TCD, TGO, THA, TJK, TKL, TKM, TLS, TON, TTO, TUN, TUR, TUV, TWN, TZA, UGA, UKR, UMI, UNK, URY, USA, UZS, VAT, VCT, VEN, VGB, VIR, VNM, VUT, WLF, WSM, XKX, YEM, ZAF, ZMB, ZWE
}

// New Enum based on provided values
enum AccountStatementRecordStatus {
  Canceled, Completed, Pending
}

// New Enum based on provided values
enum AccountStatementRecordResponse {
  Approved, Declined
}

// --- Other Enums (Assuming definitions based on previous context or needs) ---
// You might need to define these if they weren't fully specified or if you need them
enum RiskProfile {
  Low, Medium, High // From original model
}
enum KybStatus {
  NotStarted, Pending, Approved, Rejected, NotConfirmed // From original model
}
enum LanguageCode {
  AAR, ENG // From original model - Add more as needed
}
enum Secure3DType {
  SMSOTPAndStaticPassword, AppBasedOTP, None // From original model
}
enum DispatchMethod {
  StandardMail, DHLExpress, FedEx, Courier // From original model
}
enum CarrierType {
  Standard, Custom // From original model
}
enum DisposableType {
  SingleUse, CustomExpiryDate, None // From original model
}


// --- Relationships ---



// --- Pagination ---
paginate AccountStatementRecord with pagination
paginate Card with infinite-scroll
paginate CardAccount with pagination // Added pagination for CardAccount
paginate Company with pagination // Added pagination for Company

// --- DTOs ---
// Use MapStruct for DTOs
dto * with mapstruct

// --- Service Layer ---
// Service layer removed as requested

// --- Filtering ---
// Enable filtering for relevant entities/fields if needed
// filter CardAccount, Card, AccountStatementRecord // Enable for all fields
// Or specify fields: filter AccountStatementRecord(date, type, status)

